---
import Layout from "../../layouts/Base.astro";
import { getCollection } from "astro:content";

// Get all posts
const posts = await getCollection("posts");

// Define the structure of the tagCount object
interface TagCount {
    [key: string]: number;
}

// Initialize the tagCount object with the appropriate type
const tagCount: TagCount = {};

// Count the occurrences of each tag
posts.forEach((post) => {
    post.data.tags.forEach((tag) => {
        if (tagCount[tag]) {
            tagCount[tag] += 1;
        } else {
            tagCount[tag] = 1;
        }
    });
});

// Convert the tagCount object to an array of [tag, count] pairs
const tags = Object.entries(tagCount);

// Sort the tags by count in descending order, and alphabetically for those with the same count
tags.sort((a, b) => {
    if (b[1] !== a[1]) {
        return b[1] - a[1]; // Sort by count
    } else {
        return a[0].localeCompare(b[0]); // Sort alphabetically if counts are the same
    }
});
---

<Layout
    title="Ad Astra"
    description="Ad Astra, the first open-source, example-driven encyclopedia."
>
    <div
        class="mx-auto mt-8 flex w-5/6 flex-col items-center bg-red-300 font-404 text-[color:var(--text-color)]"
    >
        <h1 class="mb-8 text-4xl md:hidden md:text-5xl lg:text-6xl">Tags</h1>
        <ul class="flex w-full flex-wrap justify-evenly gap-4 gap-y-4">
            {
                tags.map(([tag, count]) => (
                    <li class="rounded-lg border-2 border-indigo-400/90 px-4 py-2 text-xl shadow-md hover:border-indigo-300 hover:font-bold">
                        <a href={`/tags/${tag}`}>
                            {tag} ({count})
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</Layout>
